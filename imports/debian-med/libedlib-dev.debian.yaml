package: libedlib-dev
distribution: debian
release: sid
component: main
version: 1.2.7
source: libedlib
homepage: https://github.com/Martinsos/edlib
license: unknown
blend: debian-med
description_md5: c27a8555f6ade9a2b16d3573f80ce761
registries:
- entry: OMICS_15611
  name: OMICtools
- entry: edlib
  name: conda:bioconda
popcon:
- insts: 15
  olde: 10
  recent: 5
descr:
- package: libedlib-dev
  description: libreria per allineamento di sequenze usando la distanza di modifica
    (sviluppo)
  long_description: " Libreria C/C++ leggera e super-veloce per l'allineamento di
    sequenze usando\n la distanza di modifica.\n .\n Il calcolo della distanza di
    modifica di due stringhe è semplice come:\n .\n  edlibAlign(\"ciao\", 4, \"world!\"\
    , 6,\n             edlibDefaultAlignConfig()).editDistance;\n Funzionalità:\n
    .\n  * Calcolo della distanza di modifica (distanza di Levehnstein).\n  * Può
    trovare il percorso ottimale di allineamento (istruzioni su come\n    trasformare
    la prima sequenza nella seconda sequenza).\n  * Può trovare solo le posizioni
    iniziali o quelle finali, o entrambe, di\n    un percorso di allineamento (può
    essere utile quando la velocità è più\n    importante che avere un percorso di
    allineamento esatto).\n  * Gestisce più metodi di allineamento: globale(NW), prefisso(SHW)
    e\n    infisso(HW), ciascuno utile per differenti scenari.\n  * Si può estendere
    la definizione dell'uguaglianza dei caratteri,\n    abilitando ad esempio i metacaratteri,
    per ottenere un allineamento\n    indifferente a maiuscole e minuscole o per lavorare
    con nucleotidi\n    degenerati.\n  * Può gestire sequenze piccole o molto grandi,
    anche per la ricerca del\n    percorso di allineamento, consumando pochissima
    memoria.\n  * Super-veloce grazie all'algoritmo di Myers per vettori di bit.\n
    .\n Questo pacchetto contiene la libreria statica e i file header.\n"
  release: sid
  description_md5: c27a8555f6ade9a2b16d3573f80ce761
  license: unknown
  blend: debian-med
- package: libedlib-dev
  description: Sekvenssammenligningsbibliotek der bruger edit distance - udvikling
  long_description: " Et simpelt og super hurtigt C/C++-bibliotek til sekvenssammenligning
    via edit distance.\n .\n Beregning af edit distance for to strenge er så simpel
    som at:\n .\n  edlibAlign(\"hello\", 5, \"world!\", 6,\n             edlibDefaultAlignConfig()).editDistance;\n
    Funktioner\n .\n  * Beregner edit distance (Levehnstein distance)\n  * Kan finde
    optimale sammenligningssti (instruktioner om transformering\n    af den første
    sekvens til den anden sekvens)\n  * Understøtter flere sammenligningsmetoder:
    global(NW), prefix(SHW) og\n    infix(HW), hver af dem nyttige i forskellige scenarier\n\
    \  * Du kan udvide tegnlighedsdefinitionen, så du f.eks. kan have jokertegn,\n\
    \    for sammenligning uden hensyn til store/små bogstaver eller til at\n    arbejde
    med degenererede nukleotider\n  * Kan nemt håndtere små eller meget store sekvenser,
    selv når\n    sammenligningsstier skal findes, men med meget lille hukommelsesforbrug\n\
    \  * Super hurtig takket være Myers' bit-vektor algoritme\n .\n Denne pakke indeholder
    det statiske bibliotek og hovedfilerne.\n"
  release: sid
  description_md5: c27a8555f6ade9a2b16d3573f80ce761
  license: unknown
  blend: debian-med
- package: libedlib-dev
  description: library for sequence alignment using edit distance (devel)
  long_description: " A lightweight and super fast C/C++ library for sequence alignment
    using\n edit distance.\n .\n Calculating edit distance of two strings is as simple
    as:\n .\n  edlibAlign(\"hello\", 5, \"world!\", 6,\n             edlibDefaultAlignConfig()).editDistance;\n
    Features\n .\n  * Calculates edit distance (Levehnstein distance).\n  * It can
    find optimal alignment path (instructions how to transform\n    first sequence
    into the second sequence).\n  * It can find just the start and/or end locations
    of alignment path -\n    can be useful when speed is more important than having
    exact\n    alignment path.\n  * Supports multiple alignment methods: global(NW),
    prefix(SHW) and\n    infix(HW), each of them useful for different scenarios.\n\
    \  * You can extend character equality definition, enabling you to e.g.\n    have
    wildcard characters, to have case insensitive alignment or to\n    work with degenerate
    nucleotides.\n  * It can easily handle small or very large sequences, even when
    finding\n    alignment path, while consuming very little memory.\n  * Super fast
    thanks to Myers's bit-vector algorithm.\n .\n This package contains the static
    library and the header files.\n"
  release: sid
  description_md5: c27a8555f6ade9a2b16d3573f80ce761
  license: unknown
  blend: debian-med
