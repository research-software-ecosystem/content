{"collectionID": [], "accessibility": [], "topic": [{"term": "Data management", "uri": "http://edamontology.org/topic_3071"}], "owner": "migle_sur", "cost": null, "relation": [], "download": [], "validated": 1, "publication": [{"doi": "10.1371/journal.pone.0185207", "note": null, "version": null, "pmid": null, "type": "Primary", "pmcid": null, "metadata": {"title": "Escape Excel: A tool for preventing gene symbol and accession conversion errors", "abstract": "\u00a9 2017 Welsh et al. This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.Background: Microsoft Excel automatically converts certain gene symbols, database accessions, and other alphanumeric text into dates, scientific notation, and other numerical representations. These conversions lead to subsequent, irreversible, corruption of the imported text. A recent survey of popular genomic literature estimates that one-fifth of all papers with supplementary gene lists suffer from this issue. Results: Here, we present an open-source tool, Escape Excel, which prevents these erroneous conversions by generating an escaped text file that can be safely imported into Excel. Escape Excel is implemented in a variety of formats (http://www.github.com/pstew/escape_excel), including a command line based Perl script, a Windows-only Excel Add-In, an OS X drag- and-drop application, a simple web-server, and as a Galaxy web environment interface. Test server implementations are accessible as a Galaxy interface (http://apostl.moffitt.org) and simple non-Galaxy web server (http://apostl.moffitt.org:8000/). Conclusions: Escape Excel detects and escapes a wide variety of problematic text strings so that they are not erroneously converted into other representations upon importation into Excel. Examples of problematic strings include date-like strings, time-like strings, leading zeroes in front of numbers, and long numeric and alphanumeric identifiers that should not be automatically converted into scientific notation. It is hoped that greater awareness of these potential data corruption issues, together with diligent escaping of text files prior to importation into Excel, will help to reduce the amount of Excel-corrupted data in scientific analyses and publications.", "citationCount": 0, "authors": [{"name": "Welsh E.A."}, {"name": "Stewart P.A."}, {"name": "Kuenzi B.M."}, {"name": "Eschrich J.A."}], "date": "2017-09-01T00:00:00Z", "journal": "PLoS ONE"}}], "homepage_status": 0, "credit": [{"typeRole": ["Primary contact"], "name": "Eric A. Welsh", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": "Eric.Welsh@moffitt.org"}], "biotoolsCURIE": "biotools:escape_excel", "elixirPlatform": [], "elixirNode": [], "version": [], "elixir_badge": 0, "homepage": "https://github.com/pstew/escape_excel", "function": [{"note": null, "input": [], "operation": [{"term": "Formatting", "uri": "http://edamontology.org/operation_0335"}], "cmd": null, "output": []}], "lastUpdate": "2018-12-10T12:58:59Z", "otherID": [], "description": "Open-source tool which prevents these erroneous conversions by generating an escaped text file that can be safely imported into Excel.", "toolType": ["Command-line tool", "Web application"], "editPermission": {"type": "private", "authors": []}, "language": ["Perl"], "link": [], "biotoolsID": "escape_excel", "additionDate": "2018-06-19T20:14:58Z", "name": "Escape Excel", "license": null, "documentation": [{"url": "https://github.com/pstew/escape_excel/blob/master/README.md", "note": null, "type": "General"}], "maturity": null, "confidence_flag": null, "operatingSystem": ["Linux", "Mac"]}