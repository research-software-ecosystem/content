{"collectionID": [], "accessibility": [], "topic": [{"term": "Assembly", "uri": "http://edamontology.org/topic_0196"}], "owner": "mbs_import", "cost": null, "relation": [], "download": [], "validated": 1, "publication": [{"doi": "10.1007/978-3-642-40453-5_27", "note": null, "version": null, "pmid": null, "type": "Primary", "pmcid": null, "metadata": {"title": "Cerulean: A hybrid assembly using high throughput short and long reads", "abstract": "Genome assembly using high throughput data with short reads, arguably, remains an unresolvable task in repetitive genomes, since when the length of a repeat exceeds the read length, it becomes difficult to unambiguously connect the flanking regions. The emergence of third generation sequencing (Pacific Biosciences) with long reads enables the opportunity to resolve complicated repeats that could not be resolved by the short read data. However, these long reads have high error rate and it is an uphill task to assemble the genome without using additional high quality short reads. Recently, Koren et al. 2012 [1] proposed an approach to use high quality short reads data to correct these long reads and, thus, make the assembly from long reads possible. However, due to the large size of both dataset (short and long reads), error-correction of these long reads requires excessively high computational resources, even on small bacterial genomes. In this work, instead of error correction of long reads, we first assemble the short reads and later map these long reads on the assembly graph to resolve repeats. Contribution: We present a hybrid assembly approach that is both computationally effective and produces high quality assemblies. Our algorithm first operates with a simplified version of the assembly graph consisting only of long contigs and gradually improves the assembly by adding smaller contigs in each iteration. In contrast to the state-of-the-art long reads error correction technique, which requires high computational resources and long running time on a supercomputer even for bacterial genome datasets, our software can produce comparable assembly using only a standard desktop in a short running time. \u00a9 2013 Springer-Verlag.", "citationCount": 27, "authors": [{"name": "Deshpande V."}, {"name": "Fung E.D.K."}, {"name": "Pham S."}, {"name": "Bafna V."}], "date": "2013-09-25T00:00:00Z", "journal": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"}}], "homepage_status": 0, "credit": [{"typeRole": ["Primary contact"], "name": null, "url": "http://cseweb.ucsd.edu/~kspham/", "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": null}], "biotoolsCURIE": "biotools:cerulean", "elixirPlatform": [], "elixirNode": [], "version": ["0.1.1"], "elixir_badge": 0, "homepage": "http://sourceforge.net/projects/ceruleanassembler/", "function": [{"note": null, "input": [], "operation": [{"term": "Sequence assembly", "uri": "http://edamontology.org/operation_0310"}], "cmd": null, "output": []}], "lastUpdate": "2018-12-10T12:58:57Z", "otherID": [], "description": "Cerulean is a hybrid assembly using high throughput short and long reads", "toolType": ["Command-line tool"], "editPermission": {"type": "private", "authors": []}, "language": ["Python"], "link": [{"url": "http://www.mybiosoftware.com/cerulean-hybrid-genome-assembler.html", "note": null, "type": "Software catalogue"}], "biotoolsID": "cerulean", "additionDate": "2017-12-18T00:05:07Z", "name": "Cerulean", "license": null, "documentation": [{"url": "https://sourceforge.net/projects/ceruleanassembler/files/?source=navbar", "note": null, "type": "General"}], "maturity": null, "confidence_flag": null, "operatingSystem": ["Linux"]}