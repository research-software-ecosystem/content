{"collectionID": [], "accessibility": [], "topic": [{"term": "Sequence assembly", "uri": "http://edamontology.org/topic_0196"}], "owner": "arve@nada.su.se", "cost": "Free of charge", "relation": [], "download": [], "validated": 1, "publication": [{"doi": "10.1186/1471-2105-15-281", "note": null, "version": null, "pmid": null, "type": "Primary", "pmcid": null, "metadata": {"title": "BESST - Efficient scaffolding of large fragmented assemblies", "abstract": "\u00a9 2014 Sahlin et al.; licensee BioMed Central Ltd.Background: The use of short reads from High Throughput Sequencing (HTS) techniques is now commonplace in de novo assembly. Yet, obtaining contiguous assemblies from short reads is challenging, thus making scaffolding an important step in the assembly pipeline. Different algorithms have been proposed but many of them use the number of read pairs supporting a linking of two contigs as an indicator of reliability. This reasoning is intuitive, but fails to account for variation in link count due to contig features.We have also noted that published scaffolders are only evaluated on small datasets using output from only one assembler. Two issues arise from this. Firstly, some of the available tools are not well suited for complex genomes. Secondly, these evaluations provide little support for inferring a software's general performance.Results: We propose a new algorithm, implemented in a tool called BESST, which can scaffold genomes of all sizes and complexities and was used to scaffold the genome of P. abies (20 Gbp). We performed a comprehensive comparison of BESST against the most popular stand-alone scaffolders on a large variety of datasets. Our results confirm that some of the popular scaffolders are not practical to run on complex datasets. Furthermore, no single stand-alone scaffolder outperforms the others on all datasets. However, BESST fares favorably to the other tested scaffolders on GAGE datasets and, moreover, outperforms the other methods when library insert size distribution is wide.Conclusion: We conclude from our results that information sources other than the quantity of links, as is commonly used, can provide useful information about genome structure when scaffolding.", "citationCount": 43, "authors": [{"name": "Sahlin K."}, {"name": "Vezzi F."}, {"name": "Nystedt B."}, {"name": "Lundeberg J."}, {"name": "Arvestad L."}], "date": "2014-08-15T00:00:00Z", "journal": "BMC Bioinformatics"}}, {"doi": "10.1101/025650", "note": null, "version": null, "pmid": null, "type": "Other", "pmcid": null, "metadata": null}, {"doi": "10.1093/bioinformatics/bts441", "note": null, "version": null, "pmid": null, "type": "Other", "pmcid": null, "metadata": {"title": "Improved gap size estimation for scaffolding algorithms", "abstract": "Motivation: One of the important steps of genome assembly is scaffolding, in which contigs are linked using information from read-pairs. Scaffolding provides estimates about the order, relative orientation and distance between contigs. We have found that contig distance estimates are generally strongly biased and based on false assumptions. Since erroneous distance estimates can mislead in subsequent analysis, it is important to provide unbiased estimation of contig distance.Results: In this article, we show that state-of-the-art programs for scaffolding are using an incorrect model of gap size estimation. We discuss why current maximum likelihood estimators are biased and describe what different cases of bias we are facing. Furthermore, we provide a model for the distribution of reads that span a gap and derive the maximum likelihood equation for the gap length. We motivate why this estimate is sound and show empirically that it outperforms gap estimators in popular scaffolding programs. Our results have consequences both for scaffolding software, structural variation detection and for library insert-size estimation as is commonly performed by read aligners. \u00a9 The Author 2012. Published by Oxford University Press. All rights reserved.", "citationCount": 13, "authors": [{"name": "Sahlin K."}, {"name": "Street N."}, {"name": "Lundeberg J."}, {"name": "Arvestad L."}], "date": "2012-09-01T00:00:00Z", "journal": "Bioinformatics"}}], "homepage_status": 0, "credit": [{"typeRole": ["Provider"], "name": "nada.su.se", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Institute", "email": null}, {"typeRole": ["Primary contact"], "name": "Kristoffer Sahlin", "url": "https://github.com/ksahlin/BESST/issues", "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": null}], "biotoolsCURIE": "biotools:besst", "elixirPlatform": [], "elixirNode": [], "version": ["1"], "elixir_badge": 0, "homepage": "https://github.com/ksahlin/BESST", "function": [{"note": null, "input": [], "operation": [{"term": "Scaffolding", "uri": "http://edamontology.org/operation_3216"}], "cmd": null, "output": []}], "lastUpdate": "2018-12-10T12:58:52Z", "otherID": [], "description": "This tool is a scaffolder. The input is a contig file and a set of BAM files from mapping paired-ends and/or mate-pair reads to the contigs, and the output are scaffolds, i.e., the contigs linked and oriented. It is both fast and accurate. Careful estimation of the gaps between contigs, many other scaffolders have seriously biased estimation. Novel treatment of paired-end contamination in mate-pair libraries, which identifies that some links in the MP data are better treated as PE.", "toolType": ["Command-line tool"], "editPermission": {"type": "private", "authors": []}, "language": ["Python"], "link": [{"url": "https://github.com/ksahlin/BESST", "note": null, "type": "Repository"}], "biotoolsID": "besst", "additionDate": "2016-02-15T10:01:52Z", "name": "BESST", "license": "GPL-3.0", "documentation": [{"url": "https://github.com/ksahlin/BESST", "note": null, "type": "General"}], "maturity": "Mature", "confidence_flag": null, "operatingSystem": ["Linux", "Mac"]}