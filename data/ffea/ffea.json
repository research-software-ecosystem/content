{"collectionID": [], "accessibility": [], "topic": [{"term": "Protein structure analysis", "uri": "http://edamontology.org/topic_2814"}, {"term": "Protein folding, stability and design", "uri": "http://edamontology.org/topic_0130"}], "owner": "migle_sur", "cost": null, "relation": [], "download": [], "validated": 1, "publication": [{"doi": "10.1371/journal.pcbi.1005897", "note": null, "version": null, "pmid": null, "type": "Primary", "pmcid": null, "metadata": {"title": "Fluctuating Finite Element Analysis (FFEA): A continuum mechanics software tool for mesoscale simulation of biomolecules", "abstract": "\u00a9 2018 Solernou et al.Fluctuating Finite Element Analysis (FFEA) is a software package designed to perform continuum mechanics simulations of proteins and other globular macromolecules. It combines conventional finite element methods with stochastic thermal noise, and is appropriate for simulations of large proteins and protein complexes at the mesoscale (length-scales in the range of 5 nm to 1 \u03bcm), where there is currently a paucity of modelling tools. It requires 3D volumetric information as input, which can be low resolution structural information such as cryo-electron tomography (cryo-ET) maps or much higher resolution atomistic co-ordinates from which volumetric information can be extracted. In this article we introduce our open source software package for performing FFEA simulations which we have released under a GPLv3 license. The software package includes a C ++ implementation of FFEA, together with tools to assist the user to set up the system from Electron Microscopy Data Bank (EMDB) or Protein Data Bank (PDB) data files. We also provide a PyMOL plugin to perform basic visualisation and additional Python tools for the analysis of FFEA simulation trajectories. This manuscript provides a basic background to the FFEA method, describing the implementation of the core mechanical model and how intermolecular interactions and the solvent environment are included within this framework. We provide prospective FFEA users with a practical overview of how to set up an FFEA simulation with reference to our publicly available online tutorials and manuals that accompany this first release of the package.", "citationCount": 1, "authors": [{"name": "Solernou A."}, {"name": "Hanson B.S."}, {"name": "Richardson R.A."}, {"name": "Welch R."}, {"name": "Read D.J."}, {"name": "Harlen O.G."}, {"name": "Harris S.A."}], "date": "2018-03-01T00:00:00Z", "journal": "PLoS Computational Biology"}}], "homepage_status": 0, "credit": [{"typeRole": ["Primary contact"], "name": "Sarah A. Harris", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": "s.a.harris@leeds.ac.uk"}], "biotoolsCURIE": "biotools:ffea", "elixirPlatform": [], "elixirNode": [], "version": [], "elixir_badge": 0, "homepage": "http://ffea.readthedocs.io/en/stable/", "function": [{"note": null, "input": [], "operation": [{"term": "Protein modelling", "uri": "http://edamontology.org/operation_0477"}], "cmd": null, "output": []}], "lastUpdate": "2018-12-10T12:58:59Z", "otherID": [], "description": "Software package designed to perform continuum mechanics simulations of proteins and other globular macromolecules. It combines conventional finite element methods with stochastic thermal noise, and is appropriate for simulations of large proteins and protein complexes at the mesoscale (length-scales in the range of 5 nm to 1 \u03bcm), where there is currently a paucity of modelling tools.", "toolType": ["Command-line tool"], "editPermission": {"type": "private", "authors": []}, "language": ["C++"], "link": [], "biotoolsID": "ffea", "additionDate": "2018-06-02T06:56:00Z", "name": "Fluctuating Finite Element Analysis (FFEA)", "license": null, "documentation": [{"url": "http://ffea.readthedocs.io/en/stable/usergroup0.html", "note": null, "type": "API documentation"}, {"url": "http://ffea.readthedocs.io/en/stable/ffeamodules/html/FFEAanalysistut.html", "note": null, "type": "User manual"}], "maturity": null, "confidence_flag": null, "operatingSystem": ["Linux", "Mac"]}