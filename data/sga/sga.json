{"collectionID": [], "accessibility": [], "topic": [{"term": "Genomics", "uri": "http://edamontology.org/topic_0622"}, {"term": "Sequence assembly", "uri": "http://edamontology.org/topic_0196"}, {"term": "Whole genome sequencing", "uri": "http://edamontology.org/topic_3673"}], "owner": "seqwiki_import", "cost": null, "relation": [], "download": [], "validated": 1, "publication": [{"doi": null, "note": null, "version": null, "pmid": "16204131", "type": null, "pmcid": null, "metadata": {"title": "The fragment assembly string graph", "abstract": "We present a concept and formalism, the string graph, which represents all that is inferable about a DNA sequence from a collection of shotgun sequencing reads collected from it. We give time and space efficient algorithms for constructing a string graph given the collection of overlaps between the reads and, in particular, present a novel linear expected time algorithm for transitive reduction in this context. The result demonstrates that the decomposition of reads into kmers employed in the de Bruijn graph approach described earlier is not essential, and exposes its close connection to the unitig approach we developed at Celera. This paper is a preliminary piece giving the basic algorithm and results that demonstrate the efficiency and scalability of the method. These ideas are being used to build a next-generation whole genome assembler called BOA (Berkeley Open Assembler) that will easily scale to mammalian genomes. \u00a9 The Author 2005. Published by Oxford University Press. All rights reserved.", "citationCount": 178, "authors": [{"name": "Myers E.W."}], "date": "2005-09-01T00:00:00Z", "journal": "Bioinformatics"}}], "homepage_status": 0, "credit": [{"typeRole": ["Primary contact"], "name": "Jared Simpson", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": "jared.simpson@oicr.on.ca"}], "biotoolsCURIE": "biotools:sga", "elixirPlatform": [], "elixirNode": [], "version": [], "elixir_badge": 0, "homepage": "https://github.com/jts/sga", "function": [{"note": null, "input": [], "operation": [{"term": "Sequence assembly", "uri": "http://edamontology.org/operation_0310"}], "cmd": null, "output": []}], "lastUpdate": "2018-12-10T12:58:53Z", "otherID": [], "description": "SGA is a de novo assembler designed to assemble large genomes from high coverage short read data.", "toolType": ["Suite"], "editPermission": {"type": "private", "authors": []}, "language": ["C++"], "link": [], "biotoolsID": "sga", "additionDate": "2017-01-13T13:16:25Z", "name": "SGA", "license": "GPL-3.0", "documentation": [{"url": "https://github.com/jts/sga/tree/master/src#readme", "note": null, "type": "General"}], "maturity": "Mature", "confidence_flag": null, "operatingSystem": ["Linux"]}