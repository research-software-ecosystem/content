{"collectionID": [], "accessibility": [], "topic": [{"term": "Proteins", "uri": "http://edamontology.org/topic_0078"}, {"term": "Small molecules", "uri": "http://edamontology.org/topic_0154"}, {"term": "Protein structure analysis", "uri": "http://edamontology.org/topic_2814"}, {"term": "Molecular dynamics", "uri": "http://edamontology.org/topic_0176"}], "owner": "d.gabrielaitis", "cost": null, "relation": [], "download": [], "validated": 1, "publication": [{"doi": "10.1093/bioinformatics/bty160", "note": null, "version": null, "pmid": null, "type": null, "pmcid": null, "metadata": {"title": "RapidRMSD: Rapid determination of RMSDs corresponding to motions of flexible molecules", "abstract": "\u00a9 The Author(s) 2018. Published by Oxford University Press. All rights reserved. Motivation: The root mean square deviation (RMSD) is one of the most used similarity criteria in structural biology and bioinformatics. Standard computation of the RMSD has a linear complexity with respect to the number of atoms in a molecule, making RMSD calculations time-consuming for the large-scale modeling applications, such as assessment of molecular docking predictions or clustering of spatially proximate molecular conformations. Previously, we introduced the RigidRMSD algorithm to compute the RMSD corresponding to the rigid-body motion of a molecule. In this study, we go beyond the limits of the rigid-body approximation by taking into account conformational flexibility of the molecule. We model the flexibility with a reduced set of collective motions computed with e.g. normal modes or principal component analysis. Results: The initialization of our algorithm is linear in the number of atoms and all the subsequent evaluations of RMSD values between flexible molecular conformations depend only on the number of collective motions that are selected to model the flexibility. Therefore, our algorithm is much faster compared to the standard RMSD computation for large-scale modeling applications. We demonstrate the efficiency of our method on several clustering examples, including clustering of flexible docking results and molecular dynamics (MD) trajectories. We also demonstrate how to use the presented formalism to generate pseudo-random constant-RMSD structural molecular ensembles and how to use these in cross-docking. Availability and implementation: We provide the algorithm written in C++ as the open-source RapidRMSD library governed by the BSD-compatible license, which is available at http://team. inria.fr/nano-d/software/RapidRMSD/. The constant-RMSD structural ensemble application and clustering of MD trajectories is available at http://team.inria.fr/nano-d/software/nolb-normalmodes/.", "citationCount": 3, "authors": [{"name": "Neveu E."}, {"name": "Popov P."}, {"name": "Hoffmann A."}, {"name": "Migliosi A."}, {"name": "Besseron X."}, {"name": "Danoy G."}, {"name": "Bouvry P."}, {"name": "Grudinin S."}], "date": "2018-01-01T00:00:00Z", "journal": "Bioinformatics"}}], "homepage_status": 0, "credit": [{"typeRole": ["Primary contact"], "name": "Sergei Grudinin", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": "Sergei.Grudinin@inria.fr"}], "biotoolsCURIE": "biotools:rapidrmsd", "elixirPlatform": [], "elixirNode": [], "version": ["0.1"], "elixir_badge": 0, "homepage": "https://team.inria.fr/nano-d/software/RapidRMSD/", "function": [{"note": null, "input": [], "operation": [{"term": "Protein flexibility and motion analysis", "uri": "http://edamontology.org/operation_0244"}], "cmd": null, "output": []}], "lastUpdate": "2018-12-10T12:58:59Z", "otherID": [], "description": "Rapid determination of RMSDs corresponding to motions of flexible molecules.", "toolType": ["Library"], "editPermission": {"type": "private", "authors": []}, "language": ["C++"], "link": [], "biotoolsID": "rapidrmsd", "additionDate": "2018-07-03T15:27:26Z", "name": "RapidRMSD", "license": "BSD-2-Clause", "documentation": [{"url": "https://team.inria.fr/nano-d/software/RapidRMSD/", "note": null, "type": "General"}], "maturity": null, "confidence_flag": null, "operatingSystem": ["Linux", "Mac"]}