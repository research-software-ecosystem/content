{
  "@context": {
    "brick": "https://brickschema.org/schema/Brick#",
    "csvw": "http://www.w3.org/ns/csvw#",
    "dc": "http://purl.org/dc/elements/1.1/",
    "dc1": "http://dcterms/",
    "dcam": "http://purl.org/dc/dcam/",
    "dcat": "http://www.w3.org/ns/dcat#",
    "dcmitype": "http://purl.org/dc/dcmitype/",
    "dcterms": "http://purl.org/dc/terms/",
    "doap": "http://usefulinc.com/ns/doap#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "geo": "http://www.opengis.net/ont/geosparql#",
    "odrl": "http://www.w3.org/ns/odrl/2/",
    "org": "http://www.w3.org/ns/org#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "prof": "http://www.w3.org/ns/dx/prof/",
    "prov": "http://www.w3.org/ns/prov#",
    "qb": "http://purl.org/linked-data/cube#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "schema": "https://schema.org/",
    "sh": "http://www.w3.org/ns/shacl#",
    "skos": "http://www.w3.org/2004/02/skos/core#",
    "sosa": "http://www.w3.org/ns/sosa/",
    "ssn": "http://www.w3.org/ns/ssn/",
    "time": "http://www.w3.org/2006/time#",
    "vann": "http://purl.org/vocab/vann/",
    "void": "http://rdfs.org/ns/void#",
    "wgs": "https://www.w3.org/2003/01/geo/wgs84_pos#",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@id": "https://dev.biii.eurobioimaging.eu/noise-suppression-using-simple-spatial-filters",
  "@type": "http://schema.org/SoftwareApplication",
  "http://schema.org/applicationCategory": {
    "@id": "http://edamontology.org/operation_Image_processing"
  },
  "http://schema.org/dateCreated": "2014-12-08T16:03:40+00:00",
  "http://schema.org/dateModified": "2018-11-26T08:32:22+00:00",
  "http://schema.org/description": "<p>Simple spatial filters can be used to suppress noise in raw image data (i.e. by averaging intensities). The best choice of filter depends on the nature of the noise, but Gaussian filtering works well for Poisson noise (i.e. commonly observed photon-counting shot noise); whereas a median filter is ideal for salt-and-pepper noise. A larger filter radius leads to stronger noise suppression but more blurring. The URL above describes the simple 2D spatial filters available in ImageJ, but similar filters are available in most software. For 3D data, 3D versions of these filters work best (since there are more pixels to average within the same radius).</p>\r\n",
  "http://schema.org/featureList": {
    "@id": "http://edamontology.org/operation_Image_processing"
  },
  "http://schema.org/name": "Noise Suppression using Simple Spatial Filters",
  "http://schema.org/publisher": "Graeme Ball",
  "http://schema.org/softwareRequirements": {
    "@id": "http://biii.eu/node/38"
  }
}