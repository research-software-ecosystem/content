{
  "@context": {
    "brick": "https://brickschema.org/schema/Brick#",
    "csvw": "http://www.w3.org/ns/csvw#",
    "dc": "http://purl.org/dc/elements/1.1/",
    "dc1": "http://dcterms/",
    "dcam": "http://purl.org/dc/dcam/",
    "dcat": "http://www.w3.org/ns/dcat#",
    "dcmitype": "http://purl.org/dc/dcmitype/",
    "dcterms": "http://purl.org/dc/terms/",
    "doap": "http://usefulinc.com/ns/doap#",
    "foaf": "http://xmlns.com/foaf/0.1/",
    "geo": "http://www.opengis.net/ont/geosparql#",
    "odrl": "http://www.w3.org/ns/odrl/2/",
    "org": "http://www.w3.org/ns/org#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "prof": "http://www.w3.org/ns/dx/prof/",
    "prov": "http://www.w3.org/ns/prov#",
    "qb": "http://purl.org/linked-data/cube#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "schema": "https://schema.org/",
    "sh": "http://www.w3.org/ns/shacl#",
    "skos": "http://www.w3.org/2004/02/skos/core#",
    "sosa": "http://www.w3.org/ns/sosa/",
    "ssn": "http://www.w3.org/ns/ssn/",
    "time": "http://www.w3.org/2006/time#",
    "vann": "http://purl.org/vocab/vann/",
    "void": "http://rdfs.org/ns/void#",
    "wgs": "https://www.w3.org/2003/01/geo/wgs84_pos#",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@id": "https://dev.biii.eurobioimaging.eu/image-denoising-using-matlab",
  "@type": "http://schema.org/SoftwareApplication",
  "http://schema.org/applicationCategory": {
    "@id": "http://edamontology.org/operation__RDyyXyhf1oHK93opXhEnRND"
  },
  "http://schema.org/dateCreated": "2014-12-08T14:37:11+00:00",
  "http://schema.org/dateModified": "2023-04-28T14:56:57+00:00",
  "http://schema.org/description": "<p>If your images are corrupted by a strong dominant Gaussian noise you can try this simple filter. It is based on thresholding in the DCT domain and is usually vastly superior to typical Gaussian filtering in term of detail preservation / noise reduction trade-off. The filter unfortunately introduces some block like artifacts that can be mitigated by averaging out overlaping shifted windows (as implemented in the Matlab version) and performing maximum intensity projection after the filtering: As such the filter is way more adapted to process 3D stacks that you plan to maximum intensity project than to process single z slice images.</p>\r\n",
  "http://schema.org/featureList": {
    "@id": "http://edamontology.org/operation__RDyyXyhf1oHK93opXhEnRND"
  },
  "http://schema.org/name": "Image denoising using Matlab",
  "http://schema.org/publisher": "SÃ©bastien Tosi",
  "http://schema.org/softwareRequirements": {
    "@id": "http://biii.eu/node/101"
  }
}