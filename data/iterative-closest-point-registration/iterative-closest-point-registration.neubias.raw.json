{
    "body": [
        {
            "format": "basic_html",
            "processed": "<p>The ICP algorithm takes two point clouds as an input and return the rigid transformation (rotation matrix R and translation vector T), that best aligns the point clouds. Example: [R,T] = icp(q,p,10); Aligns the points of p to the points q with 10 iterations of the algorithm. The transformation is then applied using R*p + repmat(T,1,length(p)); The file has implemented both point to point and point to plane as well as a couple of other features such as extrapolation, weighting functions, edge point rejection, etc.</p>",
            "summary": "",
            "value": "<p>The ICP algorithm takes two point clouds as an input and return the rigid transformation (rotation matrix R and translation vector T), that best aligns the point clouds. Example: [R,T] = icp(q,p,10); Aligns the points of p to the points q with 10 iterations of the algorithm. The transformation is then applied using R*p + repmat(T,1,length(p)); The file has implemented both point to point and point to plane as well as a couple of other features such as extrapolation, weighting functions, edge point rejection, etc.</p>\r\n"
        }
    ],
    "changed": [
        {
            "format": "Y-m-d\\TH:i:sP",
            "value": "2023-04-26T07:49:21+00:00"
        }
    ],
    "created": [
        {
            "format": "Y-m-d\\TH:i:sP",
            "value": "2016-09-15T18:45:05+00:00"
        }
    ],
    "default_langcode": [
        {
            "value": true
        }
    ],
    "field_attribution_instructions": [],
    "field_comments2023": [],
    "field_free_tagging": [],
    "field_give_feedback_on_this_soft": [
        {
            "cid": 0,
            "comment_count": 0,
            "last_comment_name": null,
            "last_comment_timestamp": 1505210052,
            "last_comment_uid": 164,
            "status": 2
        }
    ],
    "field_has_author": [
        {
            "value": " Jakob Wilm"
        },
        {
            "value": "Hans Martin Kjer"
        }
    ],
    "field_has_biological_terms": [],
    "field_has_comparison": [],
    "field_has_documentation": [],
    "field_has_doi": [],
    "field_has_entry_curator": [],
    "field_has_function": [
        {
            "target_id": 4118,
            "target_type": "taxonomy_term",
            "target_uuid": "http://edamontology.org/operation__R9Vc5BV3ZMcLHEL6WEceXbY",
            "url": "/rigid-registration"
        }
    ],
    "field_has_implementation": [],
    "field_has_interaction_level": [
        {
            "target_id": 3590,
            "target_type": "taxonomy_term",
            "target_uuid": "9865a371-85fd-4c86-b22d-6a15949acb5f",
            "url": "/taxonomy/term/3590"
        }
    ],
    "field_has_license": [],
    "field_has_location": [],
    "field_has_programming_language": [],
    "field_has_reference_publication": [
        {
            "options": [],
            "title": "",
            "uri": "http://www2.imm.dtu.dk/~jakw/publications/bscthesis.pdf"
        }
    ],
    "field_has_topic": [
        {
            "target_id": 4155,
            "target_type": "taxonomy_term",
            "target_uuid": "http://edamontology.org/topic__RBDp7HwdUBEjpS6PRjYfV2V",
            "url": "/bioimage-informatics"
        }
    ],
    "field_has_usage_example": [],
    "field_image": [],
    "field_is_compatible_with": [],
    "field_is_covered_by_training_mat": [],
    "field_is_dependent_of": [],
    "field_license_openness": [
        {
            "target_id": 3578,
            "target_type": "taxonomy_term",
            "target_uuid": "56a43bd1-20e9-420d-b37e-310ffee6e9b2",
            "url": "/taxonomy/term/3578"
        }
    ],
    "field_platform": [],
    "field_supported_image_dimension": [],
    "field_type": [
        {
            "target_id": 8,
            "target_type": "taxonomy_term",
            "target_uuid": "e4860247-2929-4f76-9bfb-6f1a95391204",
            "url": "/taxonomy/term/8"
        }
    ],
    "field_workflow_steps": [],
    "langcode": [
        {
            "value": "en"
        }
    ],
    "nid": [
        {
            "value": 1054
        }
    ],
    "path": [
        {
            "alias": "/iterative-closest-point-registration",
            "langcode": "en",
            "pid": 1009
        }
    ],
    "promote": [
        {
            "value": true
        }
    ],
    "revision_log": [],
    "revision_timestamp": [
        {
            "format": "Y-m-d\\TH:i:sP",
            "value": "2023-04-26T07:49:21+00:00"
        }
    ],
    "revision_translation_affected": [
        {
            "value": true
        }
    ],
    "revision_uid": [
        {
            "target_id": 19,
            "target_type": "user",
            "target_uuid": "a8a58b02-2abc-4749-8aea-b9a6e7086874",
            "url": "/user/19"
        }
    ],
    "status": [
        {
            "value": true
        }
    ],
    "sticky": [
        {
            "value": false
        }
    ],
    "title": [
        {
            "value": "iterative closest point registration"
        }
    ],
    "type": [
        {
            "target_id": "software",
            "target_type": "node_type",
            "target_uuid": "54008715-4695-438a-9893-5da3c88d8f5d"
        }
    ],
    "uid": [
        {
            "target_id": 164,
            "target_type": "user",
            "target_uuid": "7aac9c32-3f48-4476-89f1-363eb4e99f2b",
            "url": "/user/164"
        }
    ],
    "uuid": [
        {
            "value": "76509102-b540-4f4f-bad4-886c205d98fa"
        }
    ],
    "vid": [
        {
            "value": 4152
        }
    ]
}