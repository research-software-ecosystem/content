{
    "additionDate": "2019-11-14T18:41:34Z",
    "biotoolsCURIE": "biotools:elPrep_autogenerated",
    "biotoolsID": "elPrep_autogenerated",
    "confidence_flag": "low",
    "credit": [
        {
            "email": "pascal.costanza@imec.be",
            "name": "Pascal Costanza",
            "orcidid": "https://orcid.org/0000-0001-8894-3238",
            "typeEntity": "Person"
        }
    ],
    "description": "> LOW CONFIDENCE! | > HOMEPAGE MISSING! | > NAME EQUAL TO (PUB. DIFFERENT) bio.tools/elprep | Comparing Ease of Programming in C++, Go, and Java for Implementing a Next-Generation Sequencing Tool | elPrep is an extensible multithreaded software framework for efficiently processing Sequence Alignment Map (SAM) Binary Alignment Map (BAM) files in next-generation sequencing pipelines. Similar to other SAM BAM tools, a key challenge in elPrep is memory management, as such programs need to manipulate large amounts of data. We therefore investigated 3 programming languages with support for assisted or automated memory management for implementing elPrep, namely C++, Go, and Java. We implemented a nontrivial subset of elPrep in all 3 programming languages and compared them by benchmarking their runtime performance and memory use to determine the best language in terms of computational performance",
    "editPermission": {
        "type": "public"
    },
    "homepage": "https://www.ncbi.nlm.nih.gov/pubmed/?term=31452597",
    "language": [
        "Java",
        "C++"
    ],
    "lastUpdate": "2019-11-14T18:41:34Z",
    "name": "elPrep_autogenerated",
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1177/1176934319869015",
            "pmcid": "PMC6698987",
            "pmid": "31452597"
        }
    ],
    "topic": [
        {
            "term": "Software engineering",
            "uri": "http://edamontology.org/topic_3372"
        }
    ]
}