{
    "additionDate": "2017-08-03T18:47:29Z",
    "biotoolsCURIE": "biotools:kcmbt",
    "biotoolsID": "kcmbt",
    "credit": [
        {
            "email": "abdullah.am.cs@engr.uconn.edu",
            "name": "Abdullah-Al Mamun",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ],
            "url": "http://www.engr.uconn.edu/~abm12008/"
        }
    ],
    "description": "Very fast multi-threaded k-mer counting algorithm. It uses cache efficient burst tries to store k-mers",
    "documentation": [
        {
            "type": "General",
            "url": "https://github.com/abdullah009/kcmbt_mt/blob/master/README.md"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "k-mer counting",
                    "uri": "http://edamontology.org/operation_3472"
                }
            ]
        }
    ],
    "homepage": "https://github.com/abdullah009/kcmbt_mt",
    "language": [
        "C++",
        "C"
    ],
    "lastUpdate": "2018-12-10T12:58:57Z",
    "link": [
        {
            "type": "Software catalogue",
            "url": "http://www.mybiosoftware.com/kcmbt-k-mer-counter-based-on-multiple-burst-trees.html"
        }
    ],
    "name": "KCMBT",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "mbs_import",
    "publication": [
        {
            "metadata": {
                "abstract": "\u00a9 2016 The Author. Published by Oxford University Press. All rights reserved.Motivation: A massive number of bioinformatics applications require counting of k-length substrings in genetically important long strings. A k-mer counter generates the frequencies of each k-length substring in genome sequences. Genome assembly, repeat detection, multiple sequence alignment, error detection and many other related applications use a k-mer counter as a building block. Very fast and efficient algorithms are necessary to count k-mers in large data sets to be useful in such applications. Results: We propose a novel trie-based algorithm for this k-mer counting problem. We compare our devised algorithm k-mer Counter based on Multiple Burst Trees (KCMBT) with available all well-known algorithms. Our experimental results show that KCMBT is around 30% faster than the previous best-performing algorithm KMC2 for human genome dataset. As another example, our algorithm is around six times faster than Jellyfish2. Overall, KCMBT is 20-30% faster than KMC2 on five benchmark data sets when both the algorithms were run using multiple threads.",
                "authors": [
                    {
                        "name": "Mamun A.-A."
                    },
                    {
                        "name": "Pal S."
                    },
                    {
                        "name": "Rajasekaran S."
                    }
                ],
                "citationCount": 5,
                "date": "2016-09-15T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "KCMBT: A k-mer Counter based on Multiple Burst Trees"
            },
            "pmid": "27283950"
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "DNA",
            "uri": "http://edamontology.org/topic_0654"
        },
        {
            "term": "Sequence analysis",
            "uri": "http://edamontology.org/topic_0080"
        },
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        }
    ],
    "validated": 1
}