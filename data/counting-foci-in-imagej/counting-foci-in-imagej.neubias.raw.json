{
    "body": [
        {
            "format": "markdown",
            "processed": "<p>Various ways are proposed in different websites for example:</p>\n<ul><li>\n<a href=\"https://microscopy.duke.edu/guides/count-nuclear-foci-ImageJ\">Count the number of foci</a>\n</li>\n<li>\n<a href=\"http://forum.imagej.net/t/how-to-utilize-imagej-to-count-foci-per-nucleus/9257\">IJ Forum: How to utilize ImageJ to count foci per nucleus</a>\n</li>\n<li>\n<a href=\"https://www.researchgate.net/profile/Alexander_Chockley3/post/How_to_count_gamma_H2AX_foci_in_cells_with_the_help_of_imageJ_software/attachment/59d652df79197b80779aafbf/AS%3A514570208935936%401499694506877/download/cell+counting+automated+and+manual.pdf\">PDF: Two Ways to Count Cells with ImageJ</a>\n</li>\n</ul><p>Here, a workflow template using ImageJ's build-in <code>Find Maxima</code> ( <code>Process -&gt; Find Maxima</code>) is explained. It can be used for many 2D counting-related tasks.</p>\n<p>For counting small, bright foci (dots), set Output type to be Point Selection.  If too many points are detected, the number may be reduced using one or more of the following methods:</p>\n<p>Apply a filter to reduce noise, e.g. Process -&gt; Filters -&gt; Gaussian Blur... prior to running Find Maxima\nSet a minimum threshold with Image -&gt; Adjust -&gt; Threshold... prior to running Find Maxima, then use the Above lower threshold option within the dialog box\nIncrease the Noise tolerance value (which effectively acts as a local threshold)</p>\n<p>The resulting point selection can be modified (points added/removed) by the Multi-Point tool.</p>\n<p>After the points are available, final measurements can be made using Analyze -&gt; Measure.</p>",
            "summary": "",
            "value": "Various ways are proposed in different websites for example:\r\n\r\n- [Count the number of foci](https://microscopy.duke.edu/guides/count-nuclear-foci-ImageJ)\r\n- [IJ Forum: How to utilize ImageJ to count foci per nucleus](http://forum.imagej.net/t/how-to-utilize-imagej-to-count-foci-per-nucleus/9257)\r\n- [PDF: Two Ways to Count Cells with ImageJ](https://www.researchgate.net/profile/Alexander_Chockley3/post/How_to_count_gamma_H2AX_foci_in_cells_with_the_help_of_imageJ_software/attachment/59d652df79197b80779aafbf/AS%3A514570208935936%401499694506877/download/cell+counting+automated+and+manual.pdf)\r\n\r\nHere, a workflow template using ImageJ's build-in `Find Maxima` ( `Process -> Find Maxima`) is explained. It can be used for many 2D counting-related tasks.\r\n\r\nFor counting small, bright foci (dots), set Output type to be Point Selection.  If too many points are detected, the number may be reduced using one or more of the following methods:\r\n\r\nApply a filter to reduce noise, e.g. Process -> Filters -> Gaussian Blur... prior to running Find Maxima\r\nSet a minimum threshold with Image -> Adjust -> Threshold... prior to running Find Maxima, then use the Above lower threshold option within the dialog box\r\nIncrease the Noise tolerance value (which effectively acts as a local threshold)\r\n\r\nThe resulting point selection can be modified (points added/removed) by the Multi-Point tool. \r\n\r\nAfter the points are available, final measurements can be made using Analyze -> Measure."
        }
    ],
    "changed": [
        {
            "format": "Y-m-d\\TH:i:sP",
            "value": "2018-06-09T00:41:40+00:00"
        }
    ],
    "created": [
        {
            "format": "Y-m-d\\TH:i:sP",
            "value": "2014-12-08T17:38:28+00:00"
        }
    ],
    "default_langcode": [
        {
            "value": true
        }
    ],
    "field_attribution_instructions": [],
    "field_comments2023": [],
    "field_free_tagging": [
        {
            "target_id": 4717,
            "target_type": "taxonomy_term",
            "target_uuid": "96be03f4-c89d-4e8e-b984-54da15a84219",
            "url": "/taxonomy/term/4717"
        },
        {
            "target_id": 4718,
            "target_type": "taxonomy_term",
            "target_uuid": "7267cbac-ff55-4e08-8835-190c81a1c402",
            "url": "/taxonomy/term/4718"
        },
        {
            "target_id": 4719,
            "target_type": "taxonomy_term",
            "target_uuid": "9d90fa76-1c23-4a5a-b358-b79a41999159",
            "url": "/taxonomy/term/4719"
        },
        {
            "target_id": 4500,
            "target_type": "taxonomy_term",
            "target_uuid": "aa2b1bb1-93c6-490f-8383-54a8ad4d14dd",
            "url": "/taxonomy/term/4500"
        }
    ],
    "field_give_feedback_on_this_soft": [
        {
            "cid": 0,
            "comment_count": 0,
            "last_comment_name": null,
            "last_comment_timestamp": 1505205238,
            "last_comment_uid": 164,
            "status": 2
        }
    ],
    "field_has_author": [
        {
            "value": "Peter Bankhead"
        }
    ],
    "field_has_biological_terms": [],
    "field_has_comparison": [],
    "field_has_documentation": [
        {
            "options": [],
            "title": "ImageJ documentation: Find Maxima",
            "uri": "https://imagej.nih.gov/ij/docs/menus/process.html#find-maxima"
        },
        {
            "options": [],
            "title": "ImageJ user guide documentation: Find Maxima",
            "uri": "http://rsbweb.nih.gov/ij/docs/guide/146-29.html#sub:Find-Maxima"
        },
        {
            "options": [],
            "title": "Algorithm of Find Maxima (ImageJ mailing list)",
            "uri": "http://imagej.1557.x6.nabble.com/Find-maxima-algorithm-discription-td3683914.html"
        }
    ],
    "field_has_doi": [],
    "field_has_entry_curator": [
        {
            "target_id": 199,
            "target_type": "user",
            "target_uuid": "bc91bb8d-4b68-474d-90df-e5f83506b29b",
            "url": "/user/199"
        }
    ],
    "field_has_function": [],
    "field_has_implementation": [],
    "field_has_interaction_level": [
        {
            "target_id": 3572,
            "target_type": "taxonomy_term",
            "target_uuid": "551f908e-bb43-410a-9420-9d98f12442a0",
            "url": "/taxonomy/term/3572"
        }
    ],
    "field_has_license": [],
    "field_has_location": [],
    "field_has_programming_language": [],
    "field_has_reference_publication": [],
    "field_has_topic": [],
    "field_has_usage_example": [],
    "field_image": [
        {
            "alt": "",
            "height": 478,
            "target_id": 458,
            "target_type": "file",
            "target_uuid": "d5a3215f-e443-4bf1-8190-96dfa1a2f516",
            "title": "",
            "url": "http://dev.biii.eurobioimaging.eu/sites/default/files/2018-06/find%20maxima-600x478.png",
            "width": 600
        }
    ],
    "field_is_compatible_with": [],
    "field_is_covered_by_training_mat": [],
    "field_is_dependent_of": [
        {
            "target_id": 38,
            "target_type": "node",
            "target_uuid": "8d651867-b19b-48eb-8294-243a8230d1c0",
            "url": "/imagej"
        }
    ],
    "field_license_openness": [
        {
            "target_id": 3575,
            "target_type": "taxonomy_term",
            "target_uuid": "06a4d439-36c4-4f19-9b3a-95f50a53da20",
            "url": "/taxonomy/term/3575"
        }
    ],
    "field_platform": [
        {
            "target_id": 32,
            "target_type": "taxonomy_term",
            "target_uuid": "e5fa2325-a315-46a2-a7e6-85f5ffda2ddd",
            "url": "/taxonomy/term/32"
        },
        {
            "target_id": 29,
            "target_type": "taxonomy_term",
            "target_uuid": "11021caa-a45d-4287-a01d-dc148498e120",
            "url": "/taxonomy/term/29"
        },
        {
            "target_id": 31,
            "target_type": "taxonomy_term",
            "target_uuid": "68f9790f-8330-48f4-9404-4ad5c9a7de5d",
            "url": "/taxonomy/term/31"
        }
    ],
    "field_supported_image_dimension": [
        {
            "target_id": 3561,
            "target_type": "taxonomy_term",
            "target_uuid": "92973a3c-32a3-4d2b-b290-62bd0d78a3fb",
            "url": "/taxonomy/term/3561"
        }
    ],
    "field_type": [
        {
            "target_id": 3568,
            "target_type": "taxonomy_term",
            "target_uuid": "d9054ede-19e4-4c81-9c3d-98b334337a53",
            "url": "/taxonomy/term/3568"
        }
    ],
    "field_workflow_steps": [],
    "langcode": [
        {
            "value": "en"
        }
    ],
    "nid": [
        {
            "value": 234
        }
    ],
    "path": [
        {
            "alias": "/counting-foci-imagej",
            "langcode": "en",
            "pid": 193
        }
    ],
    "promote": [
        {
            "value": true
        }
    ],
    "revision_log": [],
    "revision_timestamp": [
        {
            "format": "Y-m-d\\TH:i:sP",
            "value": "2018-06-09T00:41:40+00:00"
        }
    ],
    "revision_translation_affected": [
        {
            "value": true
        }
    ],
    "revision_uid": [
        {
            "target_id": 94,
            "target_type": "user",
            "target_uuid": "aa749c9e-5b9a-4fdf-83ce-6b94538fe57c",
            "url": "/user/94"
        }
    ],
    "status": [
        {
            "value": true
        }
    ],
    "sticky": [
        {
            "value": false
        }
    ],
    "title": [
        {
            "value": "Counting foci in ImageJ"
        }
    ],
    "type": [
        {
            "target_id": "software",
            "target_type": "node_type",
            "target_uuid": "54008715-4695-438a-9893-5da3c88d8f5d"
        }
    ],
    "uid": [
        {
            "target_id": 164,
            "target_type": "user",
            "target_uuid": "7aac9c32-3f48-4476-89f1-363eb4e99f2b",
            "url": "/user/164"
        }
    ],
    "uuid": [
        {
            "value": "784a9592-8b92-46a6-8efa-22cfa57fb1ba"
        }
    ],
    "vid": [
        {
            "value": 1998
        }
    ]
}