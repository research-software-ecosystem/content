{
    "additionDate": "2019-11-14T18:08:10Z",
    "biotoolsCURIE": "biotools:purge_dups",
    "biotoolsID": "purge_dups",
    "confidence_flag": "high",
    "description": "Identifying and removing haplotypic duplication in primary genome assemblies | haplotypic duplication identification tool | scripts/pd_config.py: script to generate a configuration file used by run_purge_dups.py | purge haplotigs and overlaps in an assembly based on read depth | Given a primary assembly pri_asm and an alternative assembly hap_asm (optional, if you have one), follow the steps shown below to build your own purge_dups pipeline, steps with same number can be run simultaneously. Among all the steps, although step 4 is optional, we highly recommend our users to do so, because assemblers may produce overrepresented seqeuences. In such a case, The final step 4 can be applied to remove those seqeuences",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Genome assembly",
                    "uri": "http://edamontology.org/operation_0525"
                },
                {
                    "term": "Read binning",
                    "uri": "http://edamontology.org/operation_3798"
                },
                {
                    "term": "Scaffolding",
                    "uri": "http://edamontology.org/operation_3216"
                }
            ]
        }
    ],
    "homepage": "https://github.com/dfguan/purge_dups",
    "language": [
        "Python",
        "C"
    ],
    "lastUpdate": "2019-11-14T18:08:10Z",
    "license": "MIT",
    "name": "purge_dups",
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1101/729962"
        }
    ],
    "topic": [
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        }
    ]
}