{
    "additionDate": "2017-12-18T00:07:37Z",
    "biotoolsCURIE": "biotools:heu-mchc",
    "biotoolsID": "heu-mchc",
    "credit": [
        {
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ],
            "url": "http://algolab.eu/"
        }
    ],
    "description": "Heu-MCHC is a fast and accurate heuristic for the Minimum-Change Haplotype Configuration (MCHC) problem, i.e. a combinatorial formulation of the haplotype inference problem on pedigree data where the total number of recombinations and point mutations has to be minimized.",
    "documentation": [
        {
            "type": [
                "General"
            ],
            "url": "http://heu-mchc.algolab.eu/#usage"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Haplotype inference",
                    "uri": "http://edamontology.org/operation_0487"
                }
            ]
        }
    ],
    "homepage": "http://heu-mchc.algolab.eu/",
    "lastUpdate": "2018-12-10T12:58:57Z",
    "link": [
        {
            "type": [
                "Software catalogue"
            ],
            "url": "http://www.mybiosoftware.com/heu-mchc-1-0-2-heuristic-algorithm-haplotype-inference-problem-pedigree-data-recombinations-mutations.html"
        }
    ],
    "name": "Heu-MCHC",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "mbs_import",
    "publication": [
        {
            "doi": "10.1109/TCBB.2011.51",
            "metadata": {
                "abstract": "Haplotype Inference (HI) is a computational challenge of crucial importance in a range of genetic studies. Pedigrees allow to infer haplotypes from genotypes more accurately than population data, since Mendelian inheritance restricts the set of possible solutions. In this work, we define a new HI problem on pedigrees, called Minimum-Change Haplotype Configuration (MCHC) problem, that allows two types of genetic variation events: recombinations and mutations. Our new formulation extends the Minimum-Recombinant Haplotype Configuration (MRHC) problem, that has been proposed in the literature to overcome the limitations of classic statistical haplotyping methods. Our contribution is twofold. First, we prove that the MCHC problem is APX-hard under several restrictions. Second, we propose an efficient and accurate heuristic algorithm for MCHC based on an L-reduction to a well-known coding problem. Our heuristic can also be used to solve the original MRHC problem and can take advantage of additional knowledge about the input genotypes. Moreover, the L-reduction proves for the first time that MCHC and MRHC are O(nm/log nm)-approximable on general pedigrees, where n is the pedigree size and m is the genotype length. Finally, we present an extensive experimental evaluation and comparison of our heuristic algorithm with several other state-of-the-art methods for HI on pedigrees. \u00a9 2012 IEEE.",
                "authors": [
                    {
                        "name": "Pirola Y."
                    },
                    {
                        "name": "Bonizzoni P."
                    },
                    {
                        "name": "Jiang T."
                    }
                ],
                "citationCount": 8,
                "date": "2012-01-01T00:00:00Z",
                "journal": "IEEE/ACM Transactions on Computational Biology and Bioinformatics",
                "title": "An efficient algorithm for haplotype inference on pedigrees with recombinations and mutations"
            },
            "type": [
                "Primary"
            ]
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Mutation",
            "uri": "http://edamontology.org/topic_0199"
        },
        {
            "term": "Genetics",
            "uri": "http://edamontology.org/topic_3053"
        }
    ],
    "validated": 1,
    "version": [
        "1.0.2"
    ]
}