{"collectionID": [], "accessibility": [], "topic": [{"term": "Genomics", "uri": "http://edamontology.org/topic_0622"}], "owner": "seqwiki_import", "cost": null, "relation": [], "download": [], "validated": 1, "publication": [{"doi": "10.1186/s13059-017-1213-3", "note": null, "version": null, "pmid": null, "type": "Benchmarking study", "pmcid": null, "metadata": {"title": "A comparative evaluation of genome assembly reconciliation tools", "abstract": "\u00a9 2017 The Author(s). Background: The majority of eukaryotic genomes are unfinished due to the algorithmic challenges of assembling them. A variety of assembly and scaffolding tools are available, but it is not always obvious which tool or parameters to use for a specific genome size and complexity. It is, therefore, common practice to produce multiple assemblies using different assemblers and parameters, then select the best one for public release. A more compelling approach would allow one to merge multiple assemblies with the intent of producing a higher quality consensus assembly, which is the objective of assembly reconciliation. Results: Several assembly reconciliation tools have been proposed in the literature, but their strengths and weaknesses have never been compared on a common dataset. We fill this need with this work, in which we report on an extensive comparative evaluation of several tools. Specifically, we evaluate contiguity, correctness, coverage, and the duplication ratio of the merged assembly compared to the individual assemblies provided as input. Conclusions: None of the tools we tested consistently improved the quality of the input GAGE and synthetic assemblies. Our experiments show an increase in contiguity in the consensus assembly when the original assemblies already have high quality. In terms of correctness, the quality of the results depends on the specific tool, as well as on the quality and the ranking of the input assemblies. In general, the number of misassemblies ranges from being comparable to the best of the input assembly to being comparable to the worst of the input assembly.", "citationCount": 3, "authors": [{"name": "Alhakami H."}, {"name": "Mirebrahim H."}, {"name": "Lonardi S."}], "date": "2017-05-18T00:00:00Z", "journal": "Genome Biology"}}], "homepage_status": 1, "credit": [{"typeRole": ["Primary contact"], "name": "Gustavo Lacerda", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": "glacerda@lge.ibi.unicamp.br"}, {"typeRole": ["Primary contact"], "name": "Ramon Vidal", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": "ramon.vidal@gmail.com"}, {"typeRole": ["Primary contact"], "name": "Marcelo Carazzole", "url": null, "gridid": null, "note": null, "orcidid": null, "typeEntity": "Person", "email": "mcarazzo@lge.ibi.unicamp.br"}], "biotoolsCURIE": "biotools:zorro", "elixirPlatform": [], "elixirNode": [], "version": [], "elixir_badge": 0, "homepage": "http://lge.ibi.unicamp.br/zorro/", "function": [{"note": null, "input": [], "operation": [{"term": "Sequence assembly", "uri": "http://edamontology.org/operation_0310"}], "cmd": null, "output": []}], "lastUpdate": "2018-12-10T12:58:56Z", "otherID": [], "description": "ZORRO is an hybrid sequencing technology assembler. It takes to sets of pre-assembled contigs and merge them into a more contiguous and consistent assembly. The main caracteristic of Zorro is the treatment before and after assembly to avoid errors.", "toolType": ["Script"], "editPermission": {"type": "private", "authors": []}, "language": ["Perl"], "link": [], "biotoolsID": "zorro", "additionDate": "2017-01-13T13:17:05Z", "name": "ZORRO", "license": "GPL-3.0", "documentation": [{"url": "http://lge.ibi.unicamp.br/zorro/downloads/Zorro2.2/DOC", "note": null, "type": "General"}], "maturity": "Mature", "confidence_flag": null, "operatingSystem": ["Linux"]}