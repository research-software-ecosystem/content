{
    "accessibility": "Open access",
    "additionDate": "2017-01-13T13:15:04Z",
    "biotoolsCURIE": "biotools:idba",
    "biotoolsID": "idba",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "loneknightpy@gmail.com",
            "name": "Yu Peng",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ]
        }
    ],
    "description": "A short read assembler based on iterative De Bruijn graph. It is developed under 64-bit Linux, but should be suitable for all unix-like system.",
    "documentation": [
        {
            "type": [
                "General"
            ],
            "url": "http://i.cs.hku.hk/~alse/hkubrg/projects/idba/"
        }
    ],
    "download": [
        {
            "type": "Software package",
            "url": "http://hku-idba.googlecode.com/files/idba-1.1.1.tar.gz",
            "version": "1.1.1"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Sequence assembly",
                    "uri": "http://edamontology.org/operation_0310"
                }
            ]
        }
    ],
    "homepage": "http://i.cs.hku.hk/%7Ealse/idba",
    "lastUpdate": "2020-06-16T10:55:24Z",
    "license": "Unlicense",
    "link": [
        {
            "type": [
                "Repository"
            ],
            "url": "https://github.com/loneknightpy/idba"
        },
        {
            "type": [
                "Issue tracker"
            ],
            "url": "https://github.com/loneknightpy/idba/issues"
        }
    ],
    "maturity": "Mature",
    "name": "IDBA",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "seqwiki_import",
    "publication": [
        {
            "doi": "10.1007/978-3-642-12683-3_28",
            "metadata": {
                "abstract": "The de Bruijn graph assembly approach breaks reads into k-mers before assembling them into contigs. The string graph approach forms contigs by connecting two reads with k or more overlapping nucleotides. Both approaches must deal with the following problems: false-positive vertices, due to erroneous reads; gap problem, due to non-uniform coverage; branching problem, due to erroneous reads and repeat regions. A proper choice of k is crucial but for single k there is always a trade-off: a small k favors the situation of erroneous reads and non-uniform coverage, and a large k favors short repeat regions. We propose an iterative de Bruijn graph approach iterating from small to large k exploring the advantages of the in between values. Our IDBA outperforms the existing algorithms by constructing longer contigs with similar accuracy and using less memory, both with real and simulated data. The running time of the algorithm is comparable to existing algorithms. \u00a9 Springer-Verlag Berlin Heidelberg 2010.",
                "authors": [
                    {
                        "name": "Peng Y."
                    },
                    {
                        "name": "Leung H.C.M."
                    },
                    {
                        "name": "Yiu S.M."
                    },
                    {
                        "name": "Chin F.Y.L."
                    }
                ],
                "citationCount": 119,
                "date": "2010-12-23T00:00:00Z",
                "journal": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
                "title": "IDBA - A practical iterative De Bruijn graph De Novo assembler"
            },
            "type": [
                "Primary"
            ]
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        }
    ]
}