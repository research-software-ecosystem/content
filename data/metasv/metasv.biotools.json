{
    "additionDate": "2017-08-03T18:51:11Z",
    "biotoolsCURIE": "biotools:metasv",
    "biotoolsID": "metasv",
    "credit": [
        {
            "email": "bina.rd@roche.com",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ],
            "url": "http://www.bina.com/"
        }
    ],
    "description": "Accurate method-aware merging algorithm for structural variations.",
    "documentation": [
        {
            "type": [
                "General"
            ],
            "url": "http://bioinform.github.io/metasv/"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Structural variation detection",
                    "uri": "http://edamontology.org/operation_3228"
                }
            ]
        }
    ],
    "homepage": "http://bioinform.github.io/metasv/",
    "language": [
        "Python"
    ],
    "lastUpdate": "2018-12-10T12:58:58Z",
    "link": [
        {
            "type": [
                "Software catalogue"
            ],
            "url": "http://www.mybiosoftware.com/metasv-structural-variant-caller-for-next-generation-sequencing.html"
        }
    ],
    "name": "MetaSV",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "mbs_import",
    "publication": [
        {
            "metadata": {
                "abstract": "\u00a9 2015 The Author 2015. Published by Oxford University Press.Structural variations (SVs) are large genomic rearrangements that vary significantly in size, making them challenging to detect with the relatively short reads from next-generation sequencing (NGS). Different SV detection methods have been developed; however, each is limited to specific kinds of SVs with varying accuracy and resolution. Previous works have attempted to combine different methods, but they still suffer from poor accuracy particularly for insertions. We propose MetaSV, an integrated SV caller which leverages multiple orthogonal SV signals for high accuracy and resolution. MetaSV proceeds by merging SVs from multiple tools for all types of SVs. It also analyzes soft-clipped reads from alignment to detect insertions accurately since existing tools underestimate insertion SVs. Local assembly in combination with dynamic programming is used to improve breakpoint resolution. Paired-end and coverage information is used to predict SV genotypes. Using simulation and experimental data, we demonstrate the effectiveness of MetaSV across various SV types and sizes. Availability and implementation: Code in Python is at http://bioinform.github.io/metasv/.",
                "authors": [
                    {
                        "name": "Mohiyuddin M."
                    },
                    {
                        "name": "Mu J.C."
                    },
                    {
                        "name": "Li J."
                    },
                    {
                        "name": "Bani Asadi N."
                    },
                    {
                        "name": "Gerstein M.B."
                    },
                    {
                        "name": "Abyzov A."
                    },
                    {
                        "name": "Wong W.H."
                    },
                    {
                        "name": "Lam H.Y.K."
                    }
                ],
                "citationCount": 27,
                "date": "2015-01-19T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "MetaSV: An accurate and integrative structural-variant caller for next generation sequencing"
            },
            "pmid": "25861968"
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        },
        {
            "term": "Structure analysis",
            "uri": "http://edamontology.org/topic_0081"
        }
    ],
    "validated": 1
}