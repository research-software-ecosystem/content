{
    "additionDate": "2018-06-03T17:19:12Z",
    "biotoolsCURIE": "biotools:pluma",
    "biotoolsID": "pluma",
    "credit": [
        {
            "email": "tcickovs@fiu.edu",
            "name": "Trevor Cickovski",
            "typeEntity": "Person",
            "typeRole": [
                "Primary contact"
            ]
        }
    ],
    "description": "Constructing lightweight and flexible pipelines using Plugin-Based Microbiome Analysis.",
    "documentation": [
        {
            "type": [
                "General"
            ],
            "url": "http://biorg.cis.fiu.edu/pluma/userguide.pdf"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Data handling",
                    "uri": "http://edamontology.org/operation_2409"
                }
            ]
        }
    ],
    "homepage": "http://biorg.cis.fiu.edu/pluma/",
    "language": [
        "R",
        "C++",
        "Python"
    ],
    "lastUpdate": "2018-12-10T12:58:59Z",
    "name": "PluMA",
    "operatingSystem": [
        "Linux",
        "Mac"
    ],
    "owner": "d.gabrielaitis",
    "publication": [
        {
            "doi": "10.1093/bioinformatics/bty198",
            "metadata": {
                "abstract": "\u00a9 The Author(s) 2018. Motivation: Software pipelines have become almost standardized tools for microbiome analysis. Currently many pipelines are available, often sharing some of the same algorithms as stages. This is largely because each pipeline has its own source language and file formats, making it typically more economical to reinvent the wheel than to learn and interface to an existing package. We present Plugin-Based Microbiome Analysis (PluMA), which addresses this problem by providing a lightweight back end that can be infinitely extended using dynamically loaded plugin extensions. These can be written in one of many compiled or scripting languages. With PluMA and its online plugin pool, algorithm designers can easily plug-and-play existing pipeline stages with no knowledge of their underlying implementation, allowing them to efficiently test a new algorithm alongside these stages or combine them in a new and creative way. Results: We demonstrate the usefulness of PluMA through an example pipeline (P-M16S) that expands an obesity study involving gut microbiome samples from the mouse, by integrating multiple plugins using a variety of source languages and file formats, and producing new results.",
                "authors": [
                    {
                        "name": "Cickovski T."
                    },
                    {
                        "name": "Narasimhan G."
                    }
                ],
                "date": "2018-09-01T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "Constructing lightweight and flexible pipelines using Plugin-Based Microbiome Analysis (PluMA)"
            }
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Microbiology",
            "uri": "http://edamontology.org/topic_3301"
        }
    ],
    "validated": 1
}